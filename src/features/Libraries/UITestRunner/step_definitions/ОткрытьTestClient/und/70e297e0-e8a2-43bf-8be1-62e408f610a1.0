{3,
{46,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,1,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"Контекст",1,0,
{1,0},
{1,0},
{0},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КонтекстКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КонтекстРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0},"//начало текста модуля
&НаКлиенте
Перем Ванесса;
&НаКлиенте
Перем МаксКоличествоСекундПодключения,ТекКоличествоСекундПодключения;

&НаКлиенте
Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено)
	Структура = Новый Структура;
	Структура.Вставить(""Снипет"",Снипет);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ПредставлениеТеста"",ПредставлениеТеста);
	Структура.Вставить(""Транзакция"",Транзакция);
	Структура.Вставить(""Параметр"",Параметр);
	МассивТестов.Добавить(Структура);
КонецФункции

&НаКлиенте
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	ДобавитьШагВМассивТестов(ВсеТесты,""ЯРаботаюВСеансеЗапущенногоСКлючомTESTMANAGER()"",""ЯРаботаюВСеансеЗапущенногоСКлючомTESTMANAGER"",""Я работаю в сеансе, запущенного с ключом TESTMANAGER"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯСворачиваюВсеОкна()"",""ЯСворачиваюВсеОкна"",""я сворачиваю все окна"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯЗапускаюСеанс1ССКлючомTESTCLIENTСЛогиномИПаролем()"",""ЯЗапускаюСеанс1ССКлючомTESTCLIENTСЛогиномИПаролем"",""Я запускаю сеанс 1С с ключом TESTCLIENT"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯУстанавливаюСоединениеССеансомTESTCLIENT()"",""ЯУстанавливаюСоединениеССеансомTESTCLIENT"",""я устанавливаю соединение с сеансом TESTCLIENT"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯАктивизируюГлавноеОкноСеансаTESTCLIENT()"",""ЯАктивизируюГлавноеОкноСеансаTESTCLIENT"",""я активизирую главное окно сеанса TESTCLIENT"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ВПеременнойКонтекстПоявилосьЗначениеГлавноеОкноТестируемого()"",""ВПеременнойКонтекстПоявилосьЗначениеГлавноеОкноТестируемого"",""в переменной Контекст появилось значение ГлавноеОкноТестируемого"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯЗакрываюСеансTESTCLIENT()"",""ЯЗакрываюСеансTESTCLIENT"",""я закрываю сеанс TESTCLIENT"");

	Возврат ВсеТесты;
КонецФункции

&НаКлиенте
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры


&НаКлиенте
//Я работаю в сеансе, запущенного с ключом TESTMANAGER
//@ЯРаботаюВСеансеЗапущенногоСКлючомTESTMANAGER()
Процедура ЯРаботаюВСеансеЗапущенногоСКлючомTESTMANAGER() Экспорт
	Попытка
		ТипЗначения = Тип(""ТестируемоеПриложение"");
	Исключение
		ВызватьИсключение ""Хост сеанс надо запустить с ключом /TESTMANAGER."";
	КонецПопытки;
	
КонецПроцедуры


&НаКлиенте
//я сворачиваю все окна
//@ЯСворачиваюВсеОкна()
Процедура ЯСворачиваюВсеОкна() Экспорт
	СисИнфо = Новый СистемнаяИнформация; 
	Если (СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86) или (СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86_64) Тогда
		Оболочка = Новый COMОбъект(""Shell.Application"");
		Оболочка.MinimizeAll();
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
//Я запускаю сеанс 1С с ключом TESTCLIENT С Логином ""НетЛогина"" И Паролем ""НетПароля""
//@ЯЗапускаюСеанс1ССКлючомTESTCLIENTСЛогиномИПаролем()
Процедура ЯЗапускаюСеанс1ССКлючомTESTCLIENTСЛогиномИПаролем(Логин,Пароль) Экспорт
	
	УстановитьКраткийЗаголовокПриложения(""Vanessa-behavior"");
	
	Контекст.Вставить(""Логин"",Логин);
	Контекст.Вставить(""Пароль"",Пароль);
	
	Если КонтекстСохраняемый.Свойство(""ТестовоеПриложение"") Тогда
		Если КонтекстСохраняемый.ТестовоеПриложение <> Неопределено Тогда
			Попытка
				КонтекстСохраняемый.ТестовоеПриложение.УстановитьСоединение();
				ГлавноеОкноТестКлиента = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип(""ТестируемоеОкноКлиентскогоПриложения""),,,5);
			Исключение
				ГлавноеОкноТестКлиента = Неопределено;
			КонецПопытки;
			
			Если ГлавноеОкноТестКлиента <> Неопределено Тогда
				Возврат;
			КонецЕсли;	 
		КонецЕсли;	 
	КонецЕсли;	 
	
	
	
	
	СисИнфо = Новый СистемнаяИнформация; 
	
	ВерсияПриложения = СисИнфо.ВерсияПриложения;
	//Сообщить(""ВерсияПриложения=""+ВерсияПриложения);
	ПутьК1С = ""C:\Program Files (x86)\1cv8\"" + ВерсияПриложения + ""\bin\1cv8c.exe"";
	
	Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(ПутьК1С) Тогда
		ВызватьИсключение ""Не нашел путь к 1cv8c.exe: "" + ПутьК1С;
		Возврат;
	КонецЕсли;	 
	
	КаталогБазы = СтрокаСоединенияИнформационнойБазы();
	
	Если Найти(ВРег(КаталогБазы),ВРег(""File="")) > 0 Тогда
		
		КаталогБазы = СтрЗаменить(КаталогБазы,""File="","" /F"");
		КаталогБазы = СтрЗаменить(КаталогБазы,"";"","""");
		
	Иначе
		
		КаталогБазы = СтрЗаменить(КаталогБазы,""Srvr="",""/S"");
		КаталогБазы = СтрЗаменить(КаталогБазы,"""""";Ref="""""",""\"");
		
	КонецЕсли;
	
	
	Если НРег(Логин) <> НРег(""НетЛогина"") Тогда
		КаталогБазы = КаталогБазы + "" /N"""""" + Логин +  """""" /P"""""" + Пароль + """""""";
	КонецЕсли;	 
	//Сообщить(""СтрокаСоединенияИнформационнойБазы=""+СтрокаСоединенияИнформационнойБазы);
	
	СтрокаЗапуска = """""""" + ПутьК1С + """""" ENTERPRISE "" + КаталогБазы + "" /TESTCLIENT"";
	
	//Сообщить(""СтрокаЗапуска=""+СтрокаЗапуска);

	ЗапуститьСистему(СтрокаЗапуска);
	
	ТипЗначения = Тип(""ТестируемоеПриложение"");
	ПараметрыОбъекта = Новый Массив;
	ПараметрыОбъекта.Добавить(""localhost"");
	ТестовоеПриложение = Новый (ТипЗначения,ПараметрыОбъекта);
	
	КонтекстСохраняемый.Вставить(""ТестовоеПриложение"",ТестовоеПриложение);
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьСоединениеССеансомTESTCLIENT()
	//Ванесса.ПосмотретьЗначение(Контекст);
	ТестовоеПриложение = КонтекстСохраняемый.ТестовоеПриложение;
	
	ТекКоличествоСекундПодключения = ТекКоличествоСекундПодключения + 1;
	Сообщить(""ТекКоличествоСекундПодключения="" + ТекКоличествоСекундПодключения);
	
	Попытка
		ТестовоеПриложение.УстановитьСоединение();
		ОтключитьОбработчикОжидания(""УстановитьСоединениеССеансомTESTCLIENT"");
		Сообщить(""Подключились к сеансу TESTCLIENT!!!"");
		Ванесса.ПродолжитьВыполнениеШагов();
		
		Возврат;
	Исключение
		Сообщить("""" + ОписаниеОшибки());
	КонецПопытки;
	
	Если ТекКоличествоСекундПодключения >= МаксКоличествоСекундПодключения Тогда
		ОтключитьОбработчикОжидания(""УстановитьСоединениеССеансомTESTCLIENT"");
		Ванесса.ПродолжитьВыполнениеШагов();
	КонецЕсли;	 
	
КонецПроцедуры


&НаКлиенте
//я устанавливаю соединение с сеансом TESTCLIENT
//@ЯУстанавливаюСоединениеССеансомTESTCLIENT()
Процедура ЯУстанавливаюСоединениеССеансомTESTCLIENT() Экспорт
	Ванесса.ЗапретитьВыполнениеШагов();
	
	МаксКоличествоСекундПодключения = 10;
	ТекКоличествоСекундПодключения  = 0;
	
	ПодключитьОбработчикОжидания(""УстановитьСоединениеССеансомTESTCLIENT"",1);
	
КонецПроцедуры


&НаКлиенте
Процедура ПолучитьГлавноеОкноТестируемогоПриложения()
	
	ТестовоеПриложение = КонтекстСохраняемый.ТестовоеПриложение;
	
	ТекКоличествоСекундПодключения = ТекКоличествоСекундПодключения + 1;
	Сообщить(""ТекКоличествоСекундПодключения="" + ТекКоличествоСекундПодключения);
	
	Если ТекКоличествоСекундПодключения >= МаксКоличествоСекундПодключения Тогда
		ОтключитьОбработчикОжидания(""ПолучитьГлавноеОкноТестируемогоПриложения"");
		Сообщить(""Не смог ПолучитьГлавноеОкноТестируемогоПриложения!"");
		Ванесса.ПродолжитьВыполнениеШагов();
	КонецЕсли;	 
	
	
	Попытка
		ГлавноеОкноТестируемого = ТестовоеПриложение.НайтиОбъект(Тип(""ТестируемоеОкноКлиентскогоПриложения""));
		ГлавноеОкноТестируемого.Активизировать();
		ОтключитьОбработчикОжидания(""ПолучитьГлавноеОкноТестируемогоПриложения"");
		КонтекстСохраняемый.Вставить(""ГлавноеОкноТестируемого"",ГлавноеОкноТестируемого);
		Ванесса.ПродолжитьВыполнениеШагов();
	Исключение
		Сообщить("""" + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗавершитьСеансыTestClientПринудительно()
	Ванесса.ЗавершитьСеансыTestClientПринудительно();
КонецПроцедуры


&НаКлиенте
//я активизирую главное окно сеанса TESTCLIENT
//@ЯАктивизируюГлавноеОкноСеансаTESTCLIENT()
Процедура ЯАктивизируюГлавноеОкноСеансаTESTCLIENT() Экспорт
	
	ОписаниеОшибки = """";
	ТестовоеПриложение = КонтекстСохраняемый.ТестовоеПриложение;
	Попытка
		ГлавноеОкноТестируемого = ТестовоеПриложение.НайтиОбъект(Тип(""ТестируемоеОкноКлиентскогоПриложения""),,,5);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		ГлавноеОкноТестируемого = Неопределено;
	КонецПопытки;
	
	Если ГлавноеОкноТестируемого = Неопределено Тогда
		Сообщить(""Делаю перезапуск TESTCLIENT. ОписаниеОшибки="" + ОписаниеОшибки);
		ЗавершитьСеансыTestClientПринудительно();
		ЯЗапускаюСеанс1ССКлючомTESTCLIENTСЛогиномИПаролем(Контекст.Логин,Контекст.Пароль);
		ТестовоеПриложение      = КонтекстСохраняемый.ТестовоеПриложение;
		ГлавноеОкноТестируемого = ТестовоеПриложение.НайтиОбъект(Тип(""ТестируемоеОкноКлиентскогоПриложения""),,,20);
	КонецЕсли;	 
	
	ГлавноеОкноТестируемого.Активизировать();
	
	КонтекстСохраняемый.Вставить(""ГлавноеОкноТестируемого"",ГлавноеОкноТестируемого);
	
	//Ванесса.ЗапретитьВыполнениеШагов();
	//ТекКоличествоСекундПодключения  = 0;
	//МаксКоличествоСекундПодключения = 10;
	//ПодключитьОбработчикОжидания(""ПолучитьГлавноеОкноТестируемогоПриложения"",1);

	
	//ТестовоеПриложение = КонтекстСохраняемый.ТестовоеПриложение;
	//
	//АктивноеОкно = ТестовоеПриложение.ПолучитьАктивноеОкно();
	//Сообщить(""АктивноеОкно="" + АктивноеОкно);
	//ГлавноеОкноТестируемого = ТестовоеПриложение.НайтиОбъект(Тип(""ТестируемоеОкноКлиентскогоПриложения""));
	//ГлавноеОкноТестируемого.Активизировать();
КонецПроцедуры


&НаКлиенте
//в переменной Контекст появилось значение ГлавноеОкноТестируемого
//@ВПеременнойКонтекстПоявилосьЗначениеГлавноеОкноТестируемого()
Процедура ВПеременнойКонтекстПоявилосьЗначениеГлавноеОкноТестируемого() Экспорт
	Ванесса.ПроверитьРавенство(КонтекстСохраняемый.Свойство(""ГлавноеОкноТестируемого""),Истина,""В контексте есть ГлавноеОкноТестируемого."");
КонецПроцедуры


&НаКлиенте
//я закрываю сеанс TESTCLIENT
//@ЯЗакрываюСеансTESTCLIENT()
Процедура ЯЗакрываюСеансTESTCLIENT() Экспорт
	КонтекстСохраняемый.ГлавноеОкноТестируемого.Закрыть();
	КонтекстСохраняемый.ГлавноеОкноТестируемого = Неопределено;
	
	Попытка
		КонтекстСохраняемый.ТестовоеПриложение.РазорватьСоединение();
	Исключение
		//	
	КонецПопытки;
	
	КонтекстСохраняемый.ТестовоеПриложение   = Неопределено;
	
	// снимем флаг подключения в таблице TestClient
	Для каждого СтрокаПодключения Из Ванесса.ДанныеКлиентовТестирования Цикл
		СтрокаПодключения.Подключен = Ложь;
	КонецЦикла;
	
КонецПроцедуры

//окончание текста модуля
",
{4,3,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"Контекст",
{1,1,
{"ru","Контекст"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"КонтекстСохраняемый",
{1,1,
{"ru","Контекст"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}